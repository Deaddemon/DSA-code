//if we apply sorting time complexity will be O(nlogn)
//so we use unordered set O(n)

#include <bits/stdc++.h>
using namespace std;

int calc(vector<int> &arr, int n ){
   unordered_set<int>s;
   int ans=0;
   for(int i=0 ;i<n ; i++){
       s.insert(arr[i]);
       
   }
   for(int i=0 ; i<n; i++){
       if(s.find(arr[i]-1) == s.end()){
           int j = arr[i];
           while(s.find(j) != s.end()){
               j++;
           }
           ans = max(ans, j-arr[i]);
       }
   }
   return ans;
}
int main() {
   vector<int> arr = {3,8,4,5,7};
   int n= 5;
  
   
   cout<<calc(arr,n);
}
